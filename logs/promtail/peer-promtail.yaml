apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: promtail
    app.kubernetes.io/version: 2.8.2
    helm.sh/chart: promtail-6.11.2
  name: promtail-peer
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: promtail
    app.kubernetes.io/version: 2.8.2
    helm.sh/chart: promtail-6.11.2
  name: promtail-peer
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: promtail
    app.kubernetes.io/version: 2.8.2
    helm.sh/chart: promtail-6.11.2
  name: promtail-peer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail-peer
subjects:
- kind: ServiceAccount
  name: promtail-peer
  namespace: observability-peer
---
apiVersion: v1
data:
  promtail.yaml: "server:\n  log_level: info\n  http_listen_port: 3101\n  \n\nclients:\n
    \ - basic_auth:\n      password: ${TENANT_PASSWORD}\n      username: ${PEER_ENVIRONMENT}-${PEER_CLUSTER}\n
    \   tenant_id: ${PEER_ENVIRONMENT}-${PEER_CLUSTER}\n    url: ${PEER_OBSERVER_URL}/loki/api/v1/push\n\npositions:\n
    \ filename: /run/promtail/positions.yaml\n\nscrape_configs:\n  # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet
    for reference\n  - job_name: kubernetes-pods\n    pipeline_stages:\n      - match:\n
    \         action: drop\n          drop_counter_reason: debug_line\n          selector:
    '{app=~\".+\"} |~ \"DEBUG\"'\n      - limit:\n          burst: ${PEER_PROMTAIL_LIMIT_LINES_PER_SECOND}\n
    \         by_label_name: app\n          drop: true\n          rate: ${PEER_PROMTAIL_LIMIT_LINES_PER_SECOND}\n
    \     - metrics:\n          line_count_total:\n            config:\n              action:
    inc\n              match_all: true\n            description: A running counter
    of all lines with their corresponding labels\n            type: Counter\n    kubernetes_sd_configs:\n
    \     - role: pod\n    relabel_configs:\n      - source_labels:\n          - __meta_kubernetes_pod_controller_name\n
    \       regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?\n        action: replace\n        target_label:
    __tmp_controller_name\n      - source_labels:\n          - __meta_kubernetes_pod_label_app_kubernetes_io_name\n
    \         - __meta_kubernetes_pod_label_app\n          - __tmp_controller_name\n
    \         - __meta_kubernetes_pod_name\n        regex: ^;*([^;]+)(;.*)?$\n        action:
    replace\n        target_label: app\n      - source_labels:\n          - __meta_kubernetes_pod_label_app_kubernetes_io_instance\n
    \         - __meta_kubernetes_pod_label_release\n        regex: ^;*([^;]+)(;.*)?$\n
    \       action: replace\n        target_label: instance\n      - source_labels:\n
    \         - __meta_kubernetes_pod_label_app_kubernetes_io_component\n          -
    __meta_kubernetes_pod_label_component\n        regex: ^;*([^;]+)(;.*)?$\n        action:
    replace\n        target_label: component\n      - action: replace\n        source_labels:\n
    \       - __meta_kubernetes_pod_node_name\n        target_label: node_name\n      -
    action: replace\n        source_labels:\n        - __meta_kubernetes_namespace\n
    \       target_label: namespace\n      - action: replace\n        replacement:
    $1\n        separator: /\n        source_labels:\n        - namespace\n        -
    app\n        target_label: job\n      - action: replace\n        source_labels:\n
    \       - __meta_kubernetes_pod_name\n        target_label: pod\n      - action:
    replace\n        source_labels:\n        - __meta_kubernetes_pod_container_name\n
    \       target_label: container\n      - action: replace\n        replacement:
    /var/log/pods/*$1/*.log\n        separator: /\n        source_labels:\n        -
    __meta_kubernetes_pod_uid\n        - __meta_kubernetes_pod_container_name\n        target_label:
    __path__\n      - action: replace\n        regex: true/(.*)\n        replacement:
    /var/log/pods/*$1/*.log\n        separator: /\n        source_labels:\n        -
    __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash\n        - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash\n
    \       - __meta_kubernetes_pod_container_name\n        target_label: __path__\n
    \     - action: drop\n        regex: \"false\"\n        source_labels:\n        -
    __meta_kubernetes_pod_label_observability_ackstorm_io_logging\n      - action:
    drop\n        regex: (kube-system|observability)\n        source_labels:\n        -
    namespace\n  \n  \n\nlimits_config:\n  \n\ntracing:\n  enabled: false\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: promtail
    app.kubernetes.io/version: 2.8.2
    helm.sh/chart: promtail-6.11.2
  name: promtail-peer
  namespace: observability-peer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: promtail
    app.kubernetes.io/version: 2.8.2
    helm.sh/chart: promtail-6.11.2
  name: promtail-peer-metrics
  namespace: observability-peer
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 3101
    protocol: TCP
    targetPort: http-metrics
  selector:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/name: promtail
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: promtail-peer
  labels:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: promtail
    app.kubernetes.io/version: 2.8.2
    helm.sh/chart: promtail-6.11.2
  name: promtail-peer
  namespace: observability-peer
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: ackstorm-promtail
      app.kubernetes.io/name: promtail
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/instance: ackstorm-promtail
        app.kubernetes.io/name: promtail
    spec:
      containers:
      - args:
        - -config.file=/etc/promtail/promtail.yaml
        - -config.expand-env
        - --server.enable-runtime-reload
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: TENANT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: observability-tenant-auth
        image: docker.io/grafana/promtail:2.8.2
        imagePullPolicy: IfNotPresent
        name: promtail
        ports:
        - containerPort: 3101
          name: http-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/promtail
          name: config
        - mountPath: /run/promtail
          name: run
        - mountPath: /var/lib/docker/containers
          name: containers
          readOnly: true
        - mountPath: /var/log/pods
          name: pods
          readOnly: true
      enableServiceLinks: true
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      serviceAccountName: promtail-peer
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
      - configMap:
          name: promtail-peer
        name: config
      - hostPath:
          path: /run/promtail
        name: run
      - hostPath:
          path: /var/lib/docker/containers
        name: containers
      - hostPath:
          path: /var/log/pods
        name: pods
  updateStrategy: {}
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: promtail
    app.kubernetes.io/version: 2.8.2
    helm.sh/chart: promtail-6.11.2
    role: observer
  name: promtail-peer
  namespace: observability-peer
spec:
  groups:
  - name: promtail-peer
    rules:
    - alert: PromtailNotRunning
      annotations:
        description: Promtail is not running
        summary: Promtail is not running
      expr: absent(up{job="promtail-peer-metrics"}) > 0
      for: 5m
      labels:
        severity: critical
    - alert: PromtailRequestErrors
      annotations:
        description: |
          The {{ $labels.job }} {{ $labels.route }} is experiencing
          {{ printf "%.2f" $value }} errors.
          VALUE = {{ $value }}
          LABELS = {{ $labels }}
        summary: Promtail request errors (instance {{ $labels.instance }})
      expr: 100 * sum(rate(promtail_request_duration_seconds_count{status_code=~"5..|failed"}[1m]))
        by (namespace, job, route, instance) / sum(rate(promtail_request_duration_seconds_count[1m]))
        by (namespace, job, route, instance) > 10
      for: 5m
      labels:
        severity: critical
    - alert: PromtailRequestLatency
      annotations:
        description: |
          The {{ $labels.job }} {{ $labels.route }} is experiencing
          {{ printf "%.2f" $value }}s 99th percentile latency.
          VALUE = {{ $value }}
          LABELS = {{ $labels }}
        summary: Promtail request latency (instance {{ $labels.instance }})
      expr: histogram_quantile(0.99, sum(rate(promtail_request_duration_seconds_bucket[5m]))
        by (le)) > 1
      for: 5m
      labels:
        severity: critical
    - alert: PromtailRateLimitExceeded
      annotations:
        description: Promtail application log rate near limit or exceeded (will drop
          logs)
        summary: Promtail application log rate near limit or exceeded (will drop logs)
      expr: sum(increase(promtail_custom_line_count_total[5m])/300) by (app) > ${PEER_PROMTAIL_LIMIT_LINES_PER_SECOND}*0.8
      for: 5m
      labels:
        severity: major
    - alert: PromtailRateLimitExceeded
      annotations:
        description: Promtail application log rate near limit or exceeded (will drop
          logs)
        summary: Promtail application log rate near limit or exceeded (will drop logs)
      expr: sum(increase(promtail_custom_line_count_total[5m])/300) by (app) > ${PEER_PROMTAIL_LIMIT_LINES_PER_SECOND}*0.9
      for: 5m
      labels:
        severity: critical
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-promtail
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: promtail
    app.kubernetes.io/version: 2.8.2
    helm.sh/chart: promtail-6.11.2
  name: promtail-peer
  namespace: observability-peer
spec:
  endpoints:
  - port: http-metrics
    scheme: http
  selector:
    matchLabels:
      app.kubernetes.io/instance: ackstorm-promtail
      app.kubernetes.io/name: promtail
