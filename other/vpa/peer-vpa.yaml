apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes/kubernetes/pull/63797
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: verticalpodautoscalercheckpoints.autoscaling.k8s.io
spec:
  group: autoscaling.k8s.io
  names:
    kind: VerticalPodAutoscalerCheckpoint
    listKind: VerticalPodAutoscalerCheckpointList
    plural: verticalpodautoscalercheckpoints
    shortNames:
    - vpacheckpoint
    singular: verticalpodautoscalercheckpoint
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: VerticalPodAutoscalerCheckpoint is the checkpoint of the internal
          state of VPA that is used for recovery after recommender's restart.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the checkpoint. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
            properties:
              containerName:
                description: Name of the checkpointed container.
                type: string
              vpaObjectName:
                description: Name of the VPA object that stored VerticalPodAutoscalerCheckpoint
                  object.
                type: string
            type: object
          status:
            description: Data of the checkpoint.
            properties:
              cpuHistogram:
                description: Checkpoint of histogram for consumption of CPU.
                properties:
                  bucketWeights:
                    description: Map from bucket index to bucket weight.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  referenceTimestamp:
                    description: Reference timestamp for samples collected within
                      this histogram.
                    format: date-time
                    nullable: true
                    type: string
                  totalWeight:
                    description: Sum of samples to be used as denominator for weights
                      from BucketWeights.
                    type: number
                type: object
              firstSampleStart:
                description: Timestamp of the fist sample from the histograms.
                format: date-time
                nullable: true
                type: string
              lastSampleStart:
                description: Timestamp of the last sample from the histograms.
                format: date-time
                nullable: true
                type: string
              lastUpdateTime:
                description: The time when the status was last refreshed.
                format: date-time
                nullable: true
                type: string
              memoryHistogram:
                description: Checkpoint of histogram for consumption of memory.
                properties:
                  bucketWeights:
                    description: Map from bucket index to bucket weight.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  referenceTimestamp:
                    description: Reference timestamp for samples collected within
                      this histogram.
                    format: date-time
                    nullable: true
                    type: string
                  totalWeight:
                    description: Sum of samples to be used as denominator for weights
                      from BucketWeights.
                    type: number
                type: object
              totalSamplesCount:
                description: Total number of samples in the histograms.
                type: integer
              version:
                description: Version of the format of the stored data.
                type: string
            type: object
        type: object
    served: true
    storage: true
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: VerticalPodAutoscalerCheckpoint is the checkpoint of the internal
          state of VPA that is used for recovery after recommender's restart.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the checkpoint. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
            properties:
              containerName:
                description: Name of the checkpointed container.
                type: string
              vpaObjectName:
                description: Name of the VPA object that stored VerticalPodAutoscalerCheckpoint
                  object.
                type: string
            type: object
          status:
            description: Data of the checkpoint.
            properties:
              cpuHistogram:
                description: Checkpoint of histogram for consumption of CPU.
                properties:
                  bucketWeights:
                    description: Map from bucket index to bucket weight.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  referenceTimestamp:
                    description: Reference timestamp for samples collected within
                      this histogram.
                    format: date-time
                    nullable: true
                    type: string
                  totalWeight:
                    description: Sum of samples to be used as denominator for weights
                      from BucketWeights.
                    type: number
                type: object
              firstSampleStart:
                description: Timestamp of the fist sample from the histograms.
                format: date-time
                nullable: true
                type: string
              lastSampleStart:
                description: Timestamp of the last sample from the histograms.
                format: date-time
                nullable: true
                type: string
              lastUpdateTime:
                description: The time when the status was last refreshed.
                format: date-time
                nullable: true
                type: string
              memoryHistogram:
                description: Checkpoint of histogram for consumption of memory.
                properties:
                  bucketWeights:
                    description: Map from bucket index to bucket weight.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  referenceTimestamp:
                    description: Reference timestamp for samples collected within
                      this histogram.
                    format: date-time
                    nullable: true
                    type: string
                  totalWeight:
                    description: Sum of samples to be used as denominator for weights
                      from BucketWeights.
                    type: number
                type: object
              totalSamplesCount:
                description: Total number of samples in the histograms.
                type: integer
              version:
                description: Version of the format of the stored data.
                type: string
            type: object
        type: object
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes/kubernetes/pull/63797
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: verticalpodautoscalers.autoscaling.k8s.io
spec:
  group: autoscaling.k8s.io
  names:
    kind: VerticalPodAutoscaler
    listKind: VerticalPodAutoscalerList
    plural: verticalpodautoscalers
    shortNames:
    - vpa
    singular: verticalpodautoscaler
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.updatePolicy.updateMode
      name: Mode
      type: string
    - jsonPath: .status.recommendation.containerRecommendations[0].target.cpu
      name: CPU
      type: string
    - jsonPath: .status.recommendation.containerRecommendations[0].target.memory
      name: Mem
      type: string
    - jsonPath: .status.conditions[?(@.type=='RecommendationProvided')].status
      name: Provided
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: VerticalPodAutoscaler is the configuration for a vertical pod
          autoscaler, which automatically manages pod resources based on historical
          and real time resource utilization.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the behavior of the autoscaler. More info:
              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
            properties:
              recommenders:
                description: Recommender responsible for generating recommendation
                  for this object. List should be empty (then the default recommender
                  will generate the recommendation) or contain exactly one recommender.
                items:
                  description: VerticalPodAutoscalerRecommenderSelector points to
                    a specific Vertical Pod Autoscaler recommender. In the future
                    it might pass parameters to the recommender.
                  properties:
                    name:
                      description: Name of the recommender responsible for generating
                        recommendation for this object.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              resourcePolicy:
                description: Controls how the autoscaler computes recommended resources.
                  The resource policy may be used to set constraints on the recommendations
                  for individual containers. If not specified, the autoscaler computes
                  recommended resources for all containers in the pod, without additional
                  constraints.
                properties:
                  containerPolicies:
                    description: Per-container resource policies.
                    items:
                      description: ContainerResourcePolicy controls how autoscaler
                        computes the recommended resources for a specific container.
                      properties:
                        containerName:
                          description: Name of the container or DefaultContainerResourcePolicy,
                            in which case the policy is used by the containers that
                            don't have their own policy specified.
                          type: string
                        controlledResources:
                          description: Specifies the type of recommendations that
                            will be computed (and possibly applied) by VPA. If not
                            specified, the default of [ResourceCPU, ResourceMemory]
                            will be used.
                          items:
                            description: ResourceName is the name identifying various
                              resources in a ResourceList.
                            type: string
                          type: array
                        controlledValues:
                          description: Specifies which resource values should be controlled.
                            The default is "RequestsAndLimits".
                          enum:
                          - RequestsAndLimits
                          - RequestsOnly
                          type: string
                        maxAllowed:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Specifies the maximum amount of resources that
                            will be recommended for the container. The default is
                            no maximum.
                          type: object
                        minAllowed:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Specifies the minimal amount of resources that
                            will be recommended for the container. The default is
                            no minimum.
                          type: object
                        mode:
                          description: Whether autoscaler is enabled for the container.
                            The default is "Auto".
                          enum:
                          - Auto
                          - "Off"
                          type: string
                      type: object
                    type: array
                type: object
              targetRef:
                description: TargetRef points to the controller managing the set of
                  pods for the autoscaler to control - e.g. Deployment, StatefulSet.
                  VerticalPodAutoscaler can be targeted at controller implementing
                  scale subresource (the pod set is retrieved from the controller's
                  ScaleStatus) or some well known controllers (e.g. for DaemonSet
                  the pod set is read from the controller's spec). If VerticalPodAutoscaler
                  cannot use specified target it will report ConfigUnsupported condition.
                  Note that VerticalPodAutoscaler does not require full implementation
                  of scale subresource - it will not use it to modify the replica
                  count. The only thing retrieved is a label selector matching pods
                  grouped by the target resource.
                properties:
                  apiVersion:
                    description: API version of the referent
                    type: string
                  kind:
                    description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                required:
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              updatePolicy:
                description: Describes the rules on how changes are applied to the
                  pods. If not specified, all fields in the `PodUpdatePolicy` are
                  set to their default values.
                properties:
                  evictionRequirements:
                    description: EvictionRequirements is a list of EvictionRequirements
                      that need to evaluate to true in order for a Pod to be evicted.
                      If more than one EvictionRequirement is specified, all of them
                      need to be fulfilled to allow eviction.
                    items:
                      description: EvictionRequirement defines a single condition
                        which needs to be true in order to evict a Pod
                      properties:
                        changeRequirement:
                          description: EvictionChangeRequirement refers to the relationship
                            between the new target recommendation for a Pod and its
                            current requests, what kind of change is necessary for
                            the Pod to be evicted
                          enum:
                          - TargetHigherThanRequests
                          - TargetLowerThanRequests
                          type: string
                        resource:
                          description: Resources is a list of one or more resources
                            that the condition applies to. If more than one resource
                            is given, the EvictionRequirement is fulfilled if at least
                            one resource meets `changeRequirement`.
                          items:
                            description: ResourceName is the name identifying various
                              resources in a ResourceList.
                            type: string
                          type: array
                      required:
                      - changeRequirement
                      - resource
                      type: object
                    type: array
                  minReplicas:
                    description: Minimal number of replicas which need to be alive
                      for Updater to attempt pod eviction (pending other checks like
                      PDB). Only positive values are allowed. Overrides global '--min-replicas'
                      flag.
                    format: int32
                    type: integer
                  updateMode:
                    description: Controls when autoscaler applies changes to the pod
                      resources. The default is 'Auto'.
                    enum:
                    - "Off"
                    - Initial
                    - Recreate
                    - Auto
                    type: string
                type: object
            required:
            - targetRef
            type: object
          status:
            description: Current information about the autoscaler.
            properties:
              conditions:
                description: Conditions is the set of conditions required for this
                  autoscaler to scale its target, and indicates whether or not those
                  conditions are met.
                items:
                  description: VerticalPodAutoscalerCondition describes the state
                    of a VerticalPodAutoscaler at a certain point.
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another
                      format: date-time
                      type: string
                    message:
                      description: message is a human-readable explanation containing
                        details about the transition
                      type: string
                    reason:
                      description: reason is the reason for the condition's last transition.
                      type: string
                    status:
                      description: status is the status of the condition (True, False,
                        Unknown)
                      type: string
                    type:
                      description: type describes the current condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              recommendation:
                description: The most recently computed amount of resources recommended
                  by the autoscaler for the controlled pods.
                properties:
                  containerRecommendations:
                    description: Resources recommended by the autoscaler for each
                      container.
                    items:
                      description: RecommendedContainerResources is the recommendation
                        of resources computed by autoscaler for a specific container.
                        Respects the container resource policy if present in the spec.
                        In particular the recommendation is not produced for containers
                        with `ContainerScalingMode` set to 'Off'.
                      properties:
                        containerName:
                          description: Name of the container.
                          type: string
                        lowerBound:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Minimum recommended amount of resources. Observes
                            ContainerResourcePolicy. This amount is not guaranteed
                            to be sufficient for the application to operate in a stable
                            way, however running with less resources is likely to
                            have significant impact on performance/availability.
                          type: object
                        target:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Recommended amount of resources. Observes ContainerResourcePolicy.
                          type: object
                        uncappedTarget:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: The most recent recommended resources target
                            computed by the autoscaler for the controlled pods, based
                            only on actual resource usage, not taking into account
                            the ContainerResourcePolicy. May differ from the Recommendation
                            if the actual resource usage causes the target to violate
                            the ContainerResourcePolicy (lower than MinAllowed or
                            higher that MaxAllowed). Used only as status indication,
                            will not affect actual resource assignment.
                          type: object
                        upperBound:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Maximum recommended amount of resources. Observes
                            ContainerResourcePolicy. Any resources allocated beyond
                            this value are likely wasted. This value may be larger
                            than the maximum amount of application is actually capable
                            of consuming.
                          type: object
                      required:
                      - target
                      type: object
                    type: array
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - deprecated: true
    deprecationWarning: autoscaling.k8s.io/v1beta2 API is deprecated
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: VerticalPodAutoscaler is the configuration for a vertical pod
          autoscaler, which automatically manages pod resources based on historical
          and real time resource utilization.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the behavior of the autoscaler. More info:
              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
            properties:
              resourcePolicy:
                description: Controls how the autoscaler computes recommended resources.
                  The resource policy may be used to set constraints on the recommendations
                  for individual containers. If not specified, the autoscaler computes
                  recommended resources for all containers in the pod, without additional
                  constraints.
                properties:
                  containerPolicies:
                    description: Per-container resource policies.
                    items:
                      description: ContainerResourcePolicy controls how autoscaler
                        computes the recommended resources for a specific container.
                      properties:
                        containerName:
                          description: Name of the container or DefaultContainerResourcePolicy,
                            in which case the policy is used by the containers that
                            don't have their own policy specified.
                          type: string
                        maxAllowed:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Specifies the maximum amount of resources that
                            will be recommended for the container. The default is
                            no maximum.
                          type: object
                        minAllowed:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Specifies the minimal amount of resources that
                            will be recommended for the container. The default is
                            no minimum.
                          type: object
                        mode:
                          description: Whether autoscaler is enabled for the container.
                            The default is "Auto".
                          enum:
                          - Auto
                          - "Off"
                          type: string
                      type: object
                    type: array
                type: object
              targetRef:
                description: TargetRef points to the controller managing the set of
                  pods for the autoscaler to control - e.g. Deployment, StatefulSet.
                  VerticalPodAutoscaler can be targeted at controller implementing
                  scale subresource (the pod set is retrieved from the controller's
                  ScaleStatus) or some well known controllers (e.g. for DaemonSet
                  the pod set is read from the controller's spec). If VerticalPodAutoscaler
                  cannot use specified target it will report ConfigUnsupported condition.
                  Note that VerticalPodAutoscaler does not require full implementation
                  of scale subresource - it will not use it to modify the replica
                  count. The only thing retrieved is a label selector matching pods
                  grouped by the target resource.
                properties:
                  apiVersion:
                    description: API version of the referent
                    type: string
                  kind:
                    description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                required:
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              updatePolicy:
                description: Describes the rules on how changes are applied to the
                  pods. If not specified, all fields in the `PodUpdatePolicy` are
                  set to their default values.
                properties:
                  updateMode:
                    description: Controls when autoscaler applies changes to the pod
                      resources. The default is 'Auto'.
                    enum:
                    - "Off"
                    - Initial
                    - Recreate
                    - Auto
                    type: string
                type: object
            required:
            - targetRef
            type: object
          status:
            description: Current information about the autoscaler.
            properties:
              conditions:
                description: Conditions is the set of conditions required for this
                  autoscaler to scale its target, and indicates whether or not those
                  conditions are met.
                items:
                  description: VerticalPodAutoscalerCondition describes the state
                    of a VerticalPodAutoscaler at a certain point.
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another
                      format: date-time
                      type: string
                    message:
                      description: message is a human-readable explanation containing
                        details about the transition
                      type: string
                    reason:
                      description: reason is the reason for the condition's last transition.
                      type: string
                    status:
                      description: status is the status of the condition (True, False,
                        Unknown)
                      type: string
                    type:
                      description: type describes the current condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              recommendation:
                description: The most recently computed amount of resources recommended
                  by the autoscaler for the controlled pods.
                properties:
                  containerRecommendations:
                    description: Resources recommended by the autoscaler for each
                      container.
                    items:
                      description: RecommendedContainerResources is the recommendation
                        of resources computed by autoscaler for a specific container.
                        Respects the container resource policy if present in the spec.
                        In particular the recommendation is not produced for containers
                        with `ContainerScalingMode` set to 'Off'.
                      properties:
                        containerName:
                          description: Name of the container.
                          type: string
                        lowerBound:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Minimum recommended amount of resources. Observes
                            ContainerResourcePolicy. This amount is not guaranteed
                            to be sufficient for the application to operate in a stable
                            way, however running with less resources is likely to
                            have significant impact on performance/availability.
                          type: object
                        target:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Recommended amount of resources. Observes ContainerResourcePolicy.
                          type: object
                        uncappedTarget:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: The most recent recommended resources target
                            computed by the autoscaler for the controlled pods, based
                            only on actual resource usage, not taking into account
                            the ContainerResourcePolicy. May differ from the Recommendation
                            if the actual resource usage causes the target to violate
                            the ContainerResourcePolicy (lower than MinAllowed or
                            higher that MaxAllowed). Used only as status indication,
                            will not affect actual resource assignment.
                          type: object
                        upperBound:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Maximum recommended amount of resources. Observes
                            ContainerResourcePolicy. Any resources allocated beyond
                            this value are likely wasted. This value may be larger
                            than the maximum amount of application is actually capable
                            of consuming.
                          type: object
                      required:
                      - target
                      type: object
                    type: array
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-certgen
  namespace: observability-peer
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-controller
  namespace: observability-peer
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: recommender
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-recommender
  namespace: observability-peer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  name: ackstorm-goldilocks-vpa-test
  namespace: observability-peer
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: updater
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-updater
  namespace: observability-peer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller
  namespace: observability-peer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-dashboard
  namespace: observability-peer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-admission-controller
  namespace: observability-peer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-recommender
  namespace: observability-peer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-certgen
  namespace: observability-peer
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  labels:
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-test
  namespace: observability-peer
rules:
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalercheckpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - ackstorm-goldilocks-vpa-webhook
  - ackstorm-goldilocks-vpa-tls-secret
  resources:
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-certgen
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  labels:
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-test
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - nodes
  verbs:
  - list
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - verticalpodautoscalercheckpoints.autoscaling.k8s.io
  - verticalpodautoscalers.autoscaling.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - ackstorm-goldilocks-vpa-webhook-config
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - create
  - delete
  - update
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-dashboard
rules:
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:evictioner
rules:
- apiGroups:
  - apps
  - extensions
  resources:
  - replicasets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods/eviction
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:metrics-reader
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-actor
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - limitranges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-admission-controller
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - nodes
  - limitranges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - update
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-checkpoint-actor
rules:
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalercheckpoints
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - delete
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalercheckpoints
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-status-actor
rules:
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers/status
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-status-reader
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-target-reader
rules:
- apiGroups:
  - '*'
  resources:
  - '*/scale'
  verbs:
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-actor
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - limitranges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-admission-controller
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - nodes
  - limitranges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - update
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-checkpoint-actor
rules:
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalercheckpoints
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - delete
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalercheckpoints
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-evictioner
rules:
- apiGroups:
  - apps
  - extensions
  resources:
  - replicasets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods/eviction
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-metrics-reader
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-status-reader
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-target-reader
rules:
- apiGroups:
  - '*'
  resources:
  - '*/scale'
  verbs:
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-certgen
  namespace: observability-peer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ackstorm-goldilocks-vpa-admission-certgen
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-admission-certgen
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  labels:
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-test
  namespace: observability-peer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ackstorm-goldilocks-vpa-test
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-test
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-certgen
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ackstorm-goldilocks-vpa-admission-certgen
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-admission-certgen
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  labels:
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ackstorm-goldilocks-vpa-test
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-test
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: goldilocks-peer-controller
subjects:
- kind: ServiceAccount
  name: goldilocks-peer-controller
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller-map[apiGroups:[batch] resources:[jobs cronjobs]
    verbs:[list watch]]
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: map[apiGroups:[batch] resources:[jobs cronjobs] verbs:[list watch]]
subjects:
- kind: ServiceAccount
  name: goldilocks-peer-controller
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller-map[apiGroups:[monitoring.coreos.com] resources:[prometheuses]
    verbs:[list watch]]
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: map[apiGroups:[monitoring.coreos.com] resources:[prometheuses] verbs:[list
    watch]]
subjects:
- kind: ServiceAccount
  name: goldilocks-peer-controller
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: goldilocks-peer-dashboard
subjects:
- kind: ServiceAccount
  name: goldilocks-peer-dashboard
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:metrics-reader
subjects:
- kind: ServiceAccount
  name: vpa-recommender
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-actor
subjects:
- kind: ServiceAccount
  name: vpa-recommender
  namespace: observability-peer
- kind: ServiceAccount
  name: vpa-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-admission-controller
subjects:
- kind: ServiceAccount
  name: vpa-admission-controller
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-checkpoint-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-checkpoint-actor
subjects:
- kind: ServiceAccount
  name: vpa-recommender
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-evictioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:evictioner
subjects:
- kind: ServiceAccount
  name: vpa-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-status-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-status-actor
subjects:
- kind: ServiceAccount
  name: vpa-recommender
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-status-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-status-reader
subjects:
- kind: ServiceAccount
  name: vpa-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-target-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-target-reader
subjects:
- kind: ServiceAccount
  name: vpa-recommender
  namespace: observability-peer
- kind: ServiceAccount
  name: vpa-admission-controller
  namespace: observability-peer
- kind: ServiceAccount
  name: vpa-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-actor
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-recommender
  namespace: observability-peer
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-admission-controller
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-admission-controller
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-checkpoint-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-checkpoint-actor
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-recommender
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-evictionter-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-evictioner
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-metrics-reader
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-recommender
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-status-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-status-reader
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-target-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-target-reader
subjects:
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-recommender
  namespace: observability-peer
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-admission-controller
  namespace: observability-peer
- kind: ServiceAccount
  name: ackstorm-goldilocks-vpa-updater
  namespace: observability-peer
---
apiVersion: v1
kind: Service
metadata:
  name: ackstorm-goldilocks-vpa-webhook
  namespace: observability-peer
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/name: vpa
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-dashboard
  namespace: observability-peer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/name: goldilocks
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: vpa-webhook
  namespace: observability-peer
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    app: vpa-admission-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-controller
  namespace: observability-peer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: ackstorm-goldilocks
      app.kubernetes.io/name: vpa
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/instance: ackstorm-goldilocks
        app.kubernetes.io/name: vpa
    spec:
      containers:
      - args:
        - --register-webhook=false
        - --webhook-service=ackstorm-goldilocks-vpa-webhook
        - --client-ca-file=/etc/tls-certs/ca
        - --tls-cert-file=/etc/tls-certs/cert
        - --tls-private-key=/etc/tls-certs/key
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-admission-controller:0.14.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: vpa
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8944
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 200Mi
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls-certs
          name: tls-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: ackstorm-goldilocks-vpa-admission-controller
      volumes:
      - name: tls-certs
        secret:
          secretName: ackstorm-goldilocks-vpa-tls-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: recommender
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-recommender
  namespace: observability-peer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: recommender
      app.kubernetes.io/instance: ackstorm-goldilocks
      app.kubernetes.io/name: vpa
  template:
    metadata:
      labels:
        app.kubernetes.io/component: recommender
        app.kubernetes.io/instance: ackstorm-goldilocks
        app.kubernetes.io/name: vpa
    spec:
      containers:
      - args:
        - --pod-recommendation-min-cpu-millicores=15
        - --pod-recommendation-min-memory-mb=100
        - --v=4
        image: registry.k8s.io/autoscaling/vpa-recommender:0.14.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: vpa
        ports:
        - containerPort: 8942
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 500Mi
        securityContext: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: ackstorm-goldilocks-vpa-recommender
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: updater
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-updater
  namespace: observability-peer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: updater
      app.kubernetes.io/instance: ackstorm-goldilocks
      app.kubernetes.io/name: vpa
  template:
    metadata:
      labels:
        app.kubernetes.io/component: updater
        app.kubernetes.io/instance: ackstorm-goldilocks
        app.kubernetes.io/name: vpa
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-updater:0.14.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: vpa
        ports:
        - containerPort: 8943
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 500Mi
        securityContext: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: ackstorm-goldilocks-vpa-updater
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller
  namespace: observability-peer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ackstorm-goldilocks
      app.kubernetes.io/name: goldilocks
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ackstorm-goldilocks
        app.kubernetes.io/name: goldilocks
    spec:
      containers:
      - command:
        - /goldilocks
        - controller
        - -v2
        image: us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.10.0
        imagePullPolicy: Always
        name: goldilocks
        resources:
          limits:
            cpu: 25m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10324
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: goldilocks-peer-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-dashboard
  namespace: observability-peer
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/instance: ackstorm-goldilocks
      app.kubernetes.io/name: goldilocks
  template:
    metadata:
      labels:
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: ackstorm-goldilocks
        app.kubernetes.io/name: goldilocks
    spec:
      containers:
      - command:
        - /goldilocks
        - dashboard
        - --exclude-containers=linkerd-proxy,istio-proxy
        - -v2
        image: us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.10.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
        name: goldilocks
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
        resources:
          limits: {}
          requests:
            cpu: 25m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10324
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: goldilocks-peer-dashboard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-admission-controller
  namespace: observability-peer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-admission-controller
  template:
    metadata:
      labels:
        app: vpa-admission-controller
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-admission-controller:1.0.0
        imagePullPolicy: Always
        name: admission-controller
        ports:
        - containerPort: 8000
        - containerPort: 8944
          name: prometheus
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 200Mi
        volumeMounts:
        - mountPath: /etc/tls-certs
          name: tls-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: vpa-admission-controller
      volumes:
      - name: tls-certs
        secret:
          secretName: vpa-tls-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-recommender
  namespace: observability-peer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-recommender
  template:
    metadata:
      labels:
        app: vpa-recommender
    spec:
      containers:
      - args:
        - --prometheus-address=http://prometheus-prometheus-peer.observability-peer.svc:9090
        - --history-length=4d
        - --storage=prometheus
        - --target-cpu-percentile=0.90
        - --prometheus-cadvisor-job-name=kubelet
        - --container-pod-name-label=pod
        - --container-name-label=container
        - --metric-for-pod-labels=kube_pod_labels{job="kube-state-metrics"}[4d]
        - --pod-namespace-label=namespace
        - --pod-name-label=pod
        image: registry.k8s.io/autoscaling/vpa-recommender:1.0.0
        imagePullPolicy: Always
        name: recommender
        ports:
        - containerPort: 8942
          name: prometheus
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 100Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: vpa-recommender
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-updater
  namespace: observability-peer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-updater
  template:
    metadata:
      labels:
        app: vpa-updater
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-updater:1.0.0
        imagePullPolicy: Always
        name: updater
        ports:
        - containerPort: 8943
          name: prometheus
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 500Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: vpa-updater
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: certgen
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-certgen-create
  namespace: observability-peer
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: cadmission-ertgen
        app.kubernetes.io/instance: ackstorm-goldilocks
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: vpa
        app.kubernetes.io/version: 0.14.0
        helm.sh/chart: vpa-3.0.2
      name: ackstorm-goldilocks-vpa-admission-certgen
    spec:
      containers:
      - args:
        - create
        - --host=ackstorm-goldilocks-vpa-webhook,ackstorm-goldilocks-vpa-webhook.observability-peer.svc
        - --namespace=observability-peer
        - --secret-name=ackstorm-goldilocks-vpa-tls-secret
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794
        name: create
        resources: {}
      restartPolicy: OnFailure
      serviceAccountName: ackstorm-goldilocks-vpa-admission-certgen
  ttlSecondsAfterFinished: 300
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-admission-certgen-patch
  namespace: observability-peer
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-certgen
        app.kubernetes.io/instance: ackstorm-goldilocks
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: vpa
        app.kubernetes.io/version: 0.14.0
        helm.sh/chart: vpa-3.0.2
      name: ackstorm-goldilocks-vpa-admission-certgen-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ackstorm-goldilocks-vpa-webhook-config
        - --namespace=observability-peer
        - --secret-name=ackstorm-goldilocks-vpa-tls-secret
        - --patch-validating=false
        - --log-level=debug
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794
        name: patch
        resources: {}
      restartPolicy: OnFailure
      serviceAccountName: ackstorm-goldilocks-vpa-admission-certgen
  ttlSecondsAfterFinished: 300
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: vpa-recommender-peer
  namespace: observability-peer
spec:
  namespaceSelector:
    matchNames:
    - observability-peer
  podMetricsEndpoints:
  - port: prometheus
    relabelings:
    - action: keep
      regex: Running
      sourceLabels:
      - __meta_kubernetes_pod_phase
  selector:
    matchLabels:
      app: vpa-recommender
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/name: vpa-recommender-peer
  name: vpa-recommender-peer
  namespace: observability-peer
spec:
  groups:
  - name: vpa-recommender-peer
    rules:
    - alert: VPARecommenderNotRunning
      annotations:
        description: VPARecommender is not running
        summary: VPARecommender is not running
      expr: absent(up{job=~".*vpa-recommender-peer"}) > 0
      for: 15m
      labels:
        severity: major
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    helm.sh/hook-weight: "10"
  labels:
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-test-crds-available
  namespace: observability-peer
spec:
  containers:
  - args:
    - get
    - crd
    - verticalpodautoscalercheckpoints.autoscaling.k8s.io
    - verticalpodautoscalers.autoscaling.k8s.io
    command:
    - kubectl
    image: bitnami/kubectl:1.28
    imagePullPolicy: Always
    name: test
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10324
  restartPolicy: Never
  serviceAccountName: ackstorm-goldilocks-vpa-test
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "20"
  labels:
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-test-create-vpa
  namespace: observability-peer
spec:
  containers:
  - args:
    - -c
    - |
      #!/bin/bash

      set -ex
      cat <<EOF | kubectl -n observability-peer apply -f -
      apiVersion: autoscaling.k8s.io/v1
      kind: VerticalPodAutoscaler
      metadata:
        name: test-vpa
      spec:
        targetRef:
          apiVersion: "apps/v1"
          kind:       Deployment
          name:       my-app
        updatePolicy:
          updateMode: "Off"
      EOF

      kubectl -n observability-peer describe vpa test-vpa
      kubectl -n observability-peer delete vpa test-vpa
    command:
    - bash
    image: bitnami/kubectl:1.28
    imagePullPolicy: Always
    name: test
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10324
  restartPolicy: Never
  serviceAccountName: ackstorm-goldilocks-vpa-test
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "40"
  labels:
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-test-metrics-api-available
  namespace: observability-peer
spec:
  containers:
  - args:
    - get
    - --raw
    - /apis/metrics.k8s.io/v1beta1/nodes
    command:
    - kubectl
    image: bitnami/kubectl:1.28
    imagePullPolicy: Always
    name: test
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10324
  restartPolicy: Never
  serviceAccountName: ackstorm-goldilocks-vpa-test
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "30"
  labels:
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-test-webhook-configuration
  namespace: observability-peer
spec:
  containers:
  - args:
    - -c
    - |
      #!/bin/bash

      set -ex

      # Get service FQDN
      SERVICE=$(kubectl \
        get service \
        -n observability-peer \
        ackstorm-goldilocks-vpa-webhook \
        -o=jsonpath="{.metadata.name}.{.metadata.namespace}.svc:{.spec.ports[0].port}")

      # Get configured FQDN
      WEBHOOK_SERVICE=$(kubectl \
        get mutatingwebhookconfigurations.admissionregistration.k8s.io \
        ackstorm-goldilocks-vpa-webhook-config \
        -o=jsonpath="{.webhooks[0].clientConfig.service.name}.{.webhooks[0].clientConfig.service.namespace}.svc:{.webhooks[0].clientConfig.service.port}")

      # Get CA bundle
      SECRET_CABUNDLE=$(kubectl \
        get secret \
        -n observability-peer \
        ackstorm-goldilocks-vpa-tls-secret \
        -o=jsonpath="{.data.ca}")

      # Get configured CA bundle
      WEBHOOK_CABUNDLE=$(kubectl \
        get mutatingwebhookconfigurations.admissionregistration.k8s.io \
        ackstorm-goldilocks-vpa-webhook-config \
        -o=jsonpath="{.webhooks[0].clientConfig.caBundle}")

      # All corresponding values must match
      if [ $SERVICE = $WEBHOOK_SERVICE ]
      then
        echo "$WEBHOOK_SERVICE matches $SERVICE"
        if [ $WEBHOOK_CABUNDLE = $SECRET_CABUNDLE ]
        then
          echo "Webhook CA bundle matches"
          exit 0;
        else
          echo "CA bundle in mutating webhook ackstorm-goldilocks-vpa-webhook-config does not match secret observability-peer/ackstorm-goldilocks-vpa-tls-secret"
        fi
      else
        echo "Service configured in mutating webhook ackstorm-goldilocks-vpa-webhook-config is '$WEBHOOK_SERVICE' not '$SERVICE'"
      fi
      exit 1;
    command:
    - bash
    image: bitnami/kubectl:1.28
    imagePullPolicy: Always
    name: test
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10324
  restartPolicy: Never
  serviceAccountName: ackstorm-goldilocks-vpa-test
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 0.14.0
    helm.sh/chart: vpa-3.0.2
  name: ackstorm-goldilocks-vpa-webhook-config
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ackstorm-goldilocks-vpa-webhook
      namespace: observability-peer
      port: 443
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: vpa.k8s.io
  namespaceSelector: {}
  objectSelector: {}
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  - apiGroups:
    - autoscaling.k8s.io
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - verticalpodautoscalers
    scope: '*'
  sideEffects: None
  timeoutSeconds: 30
