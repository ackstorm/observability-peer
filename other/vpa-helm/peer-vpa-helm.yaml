apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller
  namespace: observability-peer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-certgen
  namespace: observability-peer
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-controller
  namespace: observability-peer
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: recommender
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-recommender
  namespace: observability-peer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  name: vpa-peer-test
  namespace: observability-peer
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: updater
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-certgen
  namespace: observability-peer
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  labels:
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-test
  namespace: observability-peer
rules:
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalercheckpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - vpa-peer-webhook
  - vpa-peer-tls-secret
  resources:
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller
rules:
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - create
  - delete
  - update
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-actor
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - limitranges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-admission-controller
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - nodes
  - limitranges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - update
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-checkpoint-actor
rules:
- apiGroups:
  - poc.autoscaling.k8s.io
  resources:
  - verticalpodautoscalercheckpoints
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - delete
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalercheckpoints
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-evictioner
rules:
- apiGroups:
  - apps
  - extensions
  resources:
  - replicasets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods/eviction
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-metrics-reader
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-certgen
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  labels:
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-test
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - nodes
  verbs:
  - list
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - verticalpodautoscalercheckpoints.autoscaling.k8s.io
  - verticalpodautoscalers.autoscaling.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - vpa-peer-webhook-config
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-status-actor
rules:
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers/status
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-status-reader
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-target-reader
rules:
- apiGroups:
  - '*'
  resources:
  - '*/scale'
  verbs:
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-certgen
  namespace: observability-peer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vpa-peer-admission-certgen
subjects:
- kind: ServiceAccount
  name: vpa-peer-admission-certgen
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  labels:
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-test
  namespace: observability-peer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vpa-peer-test
subjects:
- kind: ServiceAccount
  name: vpa-peer-test
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: goldilocks-peer-controller
subjects:
- kind: ServiceAccount
  name: goldilocks-peer-controller
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-actor
subjects:
- kind: ServiceAccount
  name: vpa-peer-recommender
  namespace: observability-peer
- kind: ServiceAccount
  name: vpa-peer-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-admission-controller
subjects:
- kind: ServiceAccount
  name: vpa-peer-admission-controller
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-checkpoint-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-checkpoint-actor
subjects:
- kind: ServiceAccount
  name: vpa-peer-recommender
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-evictionter-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-evictioner
subjects:
- kind: ServiceAccount
  name: vpa-peer-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-metrics-reader
subjects:
- kind: ServiceAccount
  name: vpa-peer-recommender
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-certgen
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-peer-admission-certgen
subjects:
- kind: ServiceAccount
  name: vpa-peer-admission-certgen
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
  labels:
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-peer-test
subjects:
- kind: ServiceAccount
  name: vpa-peer-test
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-status-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-status-actor
subjects:
- kind: ServiceAccount
  name: vpa-peer-recommender
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-status-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-status-reader
subjects:
- kind: ServiceAccount
  name: vpa-peer-updater
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-target-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-target-reader
subjects:
- kind: ServiceAccount
  name: vpa-peer-recommender
  namespace: observability-peer
- kind: ServiceAccount
  name: vpa-peer-admission-controller
  namespace: observability-peer
- kind: ServiceAccount
  name: vpa-peer-updater
  namespace: observability-peer
---
apiVersion: v1
kind: Service
metadata:
  name: vpa-peer-webhook
  namespace: observability-peer
spec:
  ports:
  - port: 443
    targetPort: 8000
  selector:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/name: vpa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ackstorm-goldilocks
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-8.0.1
  name: goldilocks-peer-controller
  namespace: observability-peer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ackstorm-goldilocks
      app.kubernetes.io/name: goldilocks
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ackstorm-goldilocks
        app.kubernetes.io/name: goldilocks
    spec:
      containers:
      - command:
        - /goldilocks
        - controller
        - -v2
        image: us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.10.0
        imagePullPolicy: Always
        name: goldilocks
        resources:
          limits:
            cpu: 25m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10324
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: goldilocks-peer-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-controller
  namespace: observability-peer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: ackstorm-vpa
      app.kubernetes.io/name: vpa
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/instance: ackstorm-vpa
        app.kubernetes.io/name: vpa
    spec:
      containers:
      - args:
        - --register-webhook=false
        - --webhook-service=vpa-peer-webhook
        - --client-ca-file=/etc/tls-certs/ca
        - --tls-cert-file=/etc/tls-certs/cert
        - --tls-private-key=/etc/tls-certs/key
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-admission-controller:1.0.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: vpa
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8944
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits: {}
          requests:
            cpu: 50m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/tls-certs
          name: tls-certs
          readOnly: true
      hostNetwork: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: vpa-peer-admission-controller
      volumes:
      - name: tls-certs
        secret:
          secretName: vpa-peer-tls-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: recommender
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-recommender
  namespace: observability-peer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: recommender
      app.kubernetes.io/instance: ackstorm-vpa
      app.kubernetes.io/name: vpa
  template:
    metadata:
      labels:
        app.kubernetes.io/component: recommender
        app.kubernetes.io/instance: ackstorm-vpa
        app.kubernetes.io/name: vpa
    spec:
      containers:
      - args:
        - --container-name-label=container
        - --container-namespace-label=namespace
        - --container-pod-name-label=pod
        - --history-length=4d
        - --metric-for-pod-labels=kube_pod_labels{job="kube-state-metrics"}[4d]
        - --pod-name-label=pod
        - --pod-namespace-label=namespace
        - --pod-recommendation-min-cpu-millicores=15
        - --pod-recommendation-min-memory-mb=100
        - --prometheus-address=http://prometheus-prometheus-peer.observability-peer.svc:9090
        - --prometheus-cadvisor-job-name=kubelet
        - --storage=prometheus
        - --target-cpu-percentile=0.95
        - --v=4
        image: registry.k8s.io/autoscaling/vpa-recommender:1.0.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: vpa
        ports:
        - containerPort: 8942
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: vpa-peer-recommender
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: updater
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-updater
  namespace: observability-peer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: updater
      app.kubernetes.io/instance: ackstorm-vpa
      app.kubernetes.io/name: vpa
  template:
    metadata:
      labels:
        app.kubernetes.io/component: updater
        app.kubernetes.io/instance: ackstorm-vpa
        app.kubernetes.io/name: vpa
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/autoscaling/vpa-updater:1.0.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: vpa
        ports:
        - containerPort: 8943
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: metrics
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits: {}
          requests:
            cpu: 50m
            memory: 500Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: vpa-peer-updater
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-110"
  labels:
    app.kubernetes.io/component: certgen
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-certgen
  namespace: observability-peer
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-certgen
        app.kubernetes.io/instance: ackstorm-vpa
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: vpa
        app.kubernetes.io/version: 1.0.0
        helm.sh/chart: vpa-4.4.6
      name: vpa-peer-admission-certgen
    spec:
      containers:
      - args:
        - create
        - --host=vpa-peer-webhook,vpa-peer-webhook.observability-peer.svc
        - --namespace=observability-peer
        - --secret-name=vpa-peer-tls-secret
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794
        name: create
        resources: {}
      restartPolicy: OnFailure
      serviceAccountName: vpa-peer-admission-certgen
  ttlSecondsAfterFinished: 300
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-certgen
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-admission-certgen-patch
  namespace: observability-peer
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-certgen
        app.kubernetes.io/instance: ackstorm-vpa
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: vpa
        app.kubernetes.io/version: 1.0.0
        helm.sh/chart: vpa-4.4.6
      name: vpa-peer-admission-certgen-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=vpa-peer-webhook-config
        - --namespace=observability-peer
        - --secret-name=vpa-peer-tls-secret
        - --patch-validating=false
        - --log-level=debug
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794
        name: patch
        resources: {}
      restartPolicy: OnFailure
      serviceAccountName: vpa-peer-admission-certgen
  ttlSecondsAfterFinished: 300
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: vpa-peer-recommender
  namespace: observability-peer
spec:
  namespaceSelector:
    matchNames:
    - observability-peer
  podMetricsEndpoints:
  - interval: 30s
    path: /metrics
    port: metrics
  selector:
    matchLabels:
      app.kubernetes.io/component: recommender
      app.kubernetes.io/instance: ackstorm-vpa
      app.kubernetes.io/name: vpa
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/name: vpa-recommender-peer
  name: vpa-recommender-peer
  namespace: observability-peer
spec:
  groups:
  - name: vpa-recommender-peer
    rules:
    - alert: VPARecommenderNotRunning
      annotations:
        description: VPARecommender is not running
        summary: VPARecommender is not running
      expr: absent(up{job="vpa-recommender-peer"}) > 0
      for: 15m
      labels:
        severity: major
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    helm.sh/hook-weight: "10"
  labels:
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-test-crds-available
  namespace: observability-peer
spec:
  containers:
  - args:
    - get
    - crd
    - verticalpodautoscalercheckpoints.autoscaling.k8s.io
    - verticalpodautoscalers.autoscaling.k8s.io
    command:
    - kubectl
    image: bitnami/kubectl:1.28
    imagePullPolicy: Always
    name: test
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10324
  restartPolicy: Never
  serviceAccountName: vpa-peer-test
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "20"
  labels:
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-test-create-vpa
  namespace: observability-peer
spec:
  containers:
  - args:
    - -c
    - |
      #!/bin/bash

      set -ex
      cat <<EOF | kubectl -n observability-peer apply -f -
      apiVersion: autoscaling.k8s.io/v1
      kind: VerticalPodAutoscaler
      metadata:
        name: test-vpa
      spec:
        targetRef:
          apiVersion: "apps/v1"
          kind:       Deployment
          name:       my-app
        updatePolicy:
          updateMode: "Off"
      EOF

      kubectl -n observability-peer describe vpa test-vpa
      kubectl -n observability-peer delete vpa test-vpa
    command:
    - bash
    image: bitnami/kubectl:1.28
    imagePullPolicy: Always
    name: test
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10324
  restartPolicy: Never
  serviceAccountName: vpa-peer-test
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "40"
  labels:
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-test-metrics-api-available
  namespace: observability-peer
spec:
  containers:
  - args:
    - get
    - --raw
    - /apis/metrics.k8s.io/v1beta1/nodes
    command:
    - kubectl
    image: bitnami/kubectl:1.28
    imagePullPolicy: Always
    name: test
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10324
  restartPolicy: Never
  serviceAccountName: vpa-peer-test
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "30"
  labels:
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-test-webhook-configuration
  namespace: observability-peer
spec:
  containers:
  - args:
    - -c
    - |
      #!/bin/bash

      set -ex

      # Get service FQDN
      SERVICE=$(kubectl \
        get service \
        -n observability-peer \
        vpa-peer-webhook \
        -o=jsonpath="{.metadata.name}.{.metadata.namespace}.svc:{.spec.ports[0].port}")

      # Get configured FQDN
      WEBHOOK_SERVICE=$(kubectl \
        get mutatingwebhookconfigurations.admissionregistration.k8s.io \
        vpa-peer-webhook-config \
        -o=jsonpath="{.webhooks[0].clientConfig.service.name}.{.webhooks[0].clientConfig.service.namespace}.svc:{.webhooks[0].clientConfig.service.port}")

      # Get CA bundle
      SECRET_CABUNDLE=$(kubectl \
        get secret \
        -n observability-peer \
        vpa-peer-tls-secret \
        -o=jsonpath="{.data.ca}")

      # Get configured CA bundle
      WEBHOOK_CABUNDLE=$(kubectl \
        get mutatingwebhookconfigurations.admissionregistration.k8s.io \
        vpa-peer-webhook-config \
        -o=jsonpath="{.webhooks[0].clientConfig.caBundle}")

      # All corresponding values must match
      if [ $SERVICE = $WEBHOOK_SERVICE ]
      then
        echo "$WEBHOOK_SERVICE matches $SERVICE"
        if [ $WEBHOOK_CABUNDLE = $SECRET_CABUNDLE ]
        then
          echo "Webhook CA bundle matches"
          exit 0;
        else
          echo "CA bundle in mutating webhook vpa-peer-webhook-config does not match secret observability-peer/vpa-peer-tls-secret"
        fi
      else
        echo "Service configured in mutating webhook vpa-peer-webhook-config is '$WEBHOOK_SERVICE' not '$SERVICE'"
      fi
      exit 1;
    command:
    - bash
    image: bitnami/kubectl:1.28
    imagePullPolicy: Always
    name: test
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10324
  restartPolicy: Never
  serviceAccountName: vpa-peer-test
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: ackstorm-vpa
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vpa
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: vpa-4.4.6
  name: vpa-peer-webhook-config
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: vpa-peer-webhook
      namespace: observability-peer
      port: 443
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: vpa.k8s.io
  namespaceSelector: {}
  objectSelector: {}
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  - apiGroups:
    - autoscaling.k8s.io
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - verticalpodautoscalers
    scope: '*'
  sideEffects: None
  timeoutSeconds: 5
