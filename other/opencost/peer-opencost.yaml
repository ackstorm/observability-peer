apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-opencost
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opencost
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/version: 1.104.4
    helm.sh/chart: opencost-1.17.2
  name: opencost-peer
  namespace: observability-peer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-opencost
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opencost
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/version: 1.104.4
    helm.sh/chart: opencost-1.17.2
  name: opencost-peer
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - deployments
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - deployments
  - daemonsets
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-opencost
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opencost
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/version: 1.104.4
    helm.sh/chart: opencost-1.17.2
  name: opencost-peer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opencost-peer
subjects:
- kind: ServiceAccount
  name: opencost-peer
  namespace: observability-peer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-opencost
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opencost
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/version: 1.104.4
    helm.sh/chart: opencost-1.17.2
  name: opencost-peer
  namespace: observability-peer
spec:
  ports:
  - name: http
    port: 9003
    targetPort: 9003
  selector:
    app.kubernetes.io/instance: ackstorm-opencost
    app.kubernetes.io/name: opencost
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-opencost
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opencost
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/version: 1.104.4
    helm.sh/chart: opencost-1.17.2
  name: opencost-peer
  namespace: observability-peer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ackstorm-opencost
      app.kubernetes.io/name: opencost
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ackstorm-opencost
        app.kubernetes.io/name: opencost
    spec:
      containers:
      - env:
        - name: PROMETHEUS_SERVER_ENDPOINT
          value: http://my-prometheus.opencost.svc:9090
        - name: CLOUD_PROVIDER_API_KEY
          value: ${PEER_CLOUD_PROVIDER_API_KEY}
        - name: CLUSTER_ID
          value: ${PEER_ENVIRONMENT}-${PEER_CLUSTER}
        - name: CLOUD_PROVIDER_API_KEY
          value: AIzaSyD29bGxmHAVEOBYtgd8sYM2gM2ekfxQX4U
        - name: EMIT_KSM_V1_METRICS
          value: "false"
        - name: EMIT_KSM_V1_METRICS_ONLY
          value: "true"
        - name: PROM_CLUSTER_ID_LABEL
          value: cluster
        image: quay.io/kubecost1/kubecost-cost-model:prod-1.105.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          httpGet:
            path: /healthz
            port: 9003
          initialDelaySeconds: 60
          periodSeconds: 10
        name: opencost-peer
        ports:
        - containerPort: 9003
          name: http
        readinessProbe:
          failureThreshold: 12
          httpGet:
            path: /healthz
            port: 9003
          initialDelaySeconds: 60
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 80Mi
      serviceAccountName: opencost-peer
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/name: opencost-peer
  name: opencost-peer
  namespace: observability-peer
spec:
  groups:
  - name: opencost-peer
    rules:
    - alert: OpenCostNotRunning
      annotations:
        description: EventExporter is not running
        summary: EventExporter is not running
      expr: absent(up{job="opencost-peer"}) > 0
      for: 5m
      labels:
        severity: major
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: ackstorm-opencost
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opencost
    app.kubernetes.io/part-of: opencost
    app.kubernetes.io/version: 1.104.4
    helm.sh/chart: opencost-1.17.2
  name: opencost-peer
  namespace: observability-peer
spec:
  endpoints:
  - honorLabels: true
    interval: 30s
    path: /metrics
    port: http
    scheme: http
  namespaceSelector:
    matchNames:
    - observability-peer
  selector:
    matchLabels:
      app.kubernetes.io/instance: ackstorm-opencost
      app.kubernetes.io/name: opencost
